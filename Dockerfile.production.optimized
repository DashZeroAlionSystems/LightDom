# Multi-stage Dockerfile for LightDom Production
# Optimized for production deployment with security and performance

# Stage 1: Dependencies
FROM node:18-alpine AS deps
RUN apk add --no-cache libc6-compat
WORKDIR /app

# Copy package files
COPY package*.json ./
COPY tsconfig*.json ./

# Install dependencies only (no dev dependencies for production)
RUN npm ci --only=production --ignore-scripts && npm cache clean --force

# Stage 2: Builder
FROM node:18-alpine AS builder
WORKDIR /app

# Copy dependencies from deps stage
COPY --from=deps /app/node_modules ./node_modules

# Copy source code
COPY . .

# Build frontend
RUN npm run build

# Remove dev dependencies and clean cache
RUN npm prune --production && npm cache clean --force

# Stage 3: Production Runtime
FROM node:18-alpine AS runtime

# Install security updates and required packages
RUN apk update && apk upgrade && \
    apk add --no-cache \
    dumb-init \
    curl \
    wget \
    ca-certificates \
    chromium \
    nss \
    freetype \
    harfbuzz \
    ttf-freefont \
    postgresql-client \
    redis \
    && rm -rf /var/cache/apk/*

# Create app user for security
RUN addgroup -g 1001 -S nodejs && \
    adduser -S lightdom -u 1001 && \
    mkdir -p /app && \
    chown -R lightdom:nodejs /app

# Set working directory
WORKDIR /app

# Copy built application from builder stage
COPY --from=builder --chown=lightdom:nodejs /app/dist ./dist
COPY --from=builder --chown=lightdom:nodejs /app/node_modules ./node_modules
COPY --from=builder --chown=lightdom:nodejs /app/package*.json ./
COPY --from=builder --chown=lightdom:nodejs /app/api-server-express.js ./
COPY --from=builder --chown=lightdom:nodejs /app/src ./src
COPY --from=builder --chown=lightdom:nodejs /app/crawler ./crawler
COPY --from=builder --chown=lightdom:nodejs /app/contracts ./contracts
COPY --from=builder --chown=lightdom:nodejs /app/database ./database
COPY --from=builder --chown=lightdom:nodejs /app/start-*.js ./
COPY --from=builder --chown=lightdom:nodejs /app/dom-space-harvester.tsx ./

# Create necessary directories with proper permissions
RUN mkdir -p /app/logs /app/artifacts /app/temp /app/ssl && \
    chown -R lightdom:nodejs /app/logs /app/artifacts /app/temp /app/ssl

# Set Puppeteer to use system Chromium
ENV PUPPETEER_SKIP_CHROMIUM_DOWNLOAD=true
ENV PUPPETEER_EXECUTABLE_PATH=/usr/bin/chromium-browser

# Set production environment
ENV NODE_ENV=production
ENV PORT=3001

# Security: Remove unnecessary files and set proper permissions
RUN find /app -type f -name "*.md" -delete && \
    find /app -type f -name "*.log" -delete && \
    find /app -type d -name ".git" -exec rm -rf {} + 2>/dev/null || true && \
    find /app -type d -name "node_modules" -exec chmod -R 755 {} \; && \
    chmod -R 755 /app && \
    chmod 644 /app/package*.json

# Switch to non-root user
USER lightdom

# Expose ports
EXPOSE 3000 3001

# Health check with proper interval for production
HEALTHCHECK --interval=30s --timeout=10s --start-period=60s --retries=3 \
    CMD curl -f http://localhost:3001/api/health || exit 1

# Use dumb-init for proper signal handling
ENTRYPOINT ["dumb-init", "--"]

# Default command
CMD ["node", "api-server-express.js"]