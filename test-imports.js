import express from 'express';
import http from 'http';
import { Server as SocketIOServer } from 'socket.io';

console.log('Testing imports...');

try {
  const app = express();
  console.log('‚úÖ Express imported successfully');

  const server = http.createServer(app);
  console.log('‚úÖ HTTP server created successfully');

  const io = new SocketIOServer(server, {
    cors: {
      origin: "http://localhost:3000",
      methods: ["GET", "POST"]
    }
  });
  console.log('‚úÖ Socket.IO server created successfully');

  console.log('üéâ All basic imports working!');
} catch (error) {
  console.error('‚ùå Import error:', error);
}

// Test custom imports
console.log('\nTesting custom imports...');

try {
  console.log('Testing RealWebCrawlerSystem...');
  const { RealWebCrawlerSystem } = await import('./crawler/RealWebCrawlerSystem.js');
  console.log('‚úÖ RealWebCrawlerSystem imported successfully');
} catch (error) {
  console.error('‚ùå RealWebCrawlerSystem import error:', error.message);
}

try {
  console.log('Testing CrawlerSupervisor...');
  const CrawlerSupervisor = await import('./utils/CrawlerSupervisor.js');
  console.log('‚úÖ CrawlerSupervisor imported successfully');
} catch (error) {
  console.error('‚ùå CrawlerSupervisor import error:', error.message);
}

try {
  console.log('Testing MetricsCollector...');
  const MetricsCollector = await import('./utils/MetricsCollector.js');
  console.log('‚úÖ MetricsCollector imported successfully');
} catch (error) {
  console.error('‚ùå MetricsCollector import error:', error.message);
}

try {
  console.log('Testing HeadlessBlockchainRunner...');
  const HeadlessBlockchainRunner = await import('./utils/HeadlessBlockchainRunner.js');
  console.log('‚úÖ HeadlessBlockchainRunner imported successfully');
} catch (error) {
  console.error('‚ùå HeadlessBlockchainRunner import error:', error.message);
}

try {
  console.log('Testing BlockchainMetricsCollector...');
  const BlockchainMetricsCollector = await import('./utils/BlockchainMetricsCollector.js');
  console.log('‚úÖ BlockchainMetricsCollector imported successfully');
} catch (error) {
  console.error('‚ùå BlockchainMetricsCollector import error:', error.message);
}

try {
  console.log('Testing api-mining-routes...');
  const { addMiningRoutes } = await import('./api-mining-routes.js');
  console.log('‚úÖ api-mining-routes imported successfully');
} catch (error) {
  console.error('‚ùå api-mining-routes import error:', error.message);
}

console.log('Custom import testing complete');

// Now test instantiating the API server class
console.log('\nTesting API server instantiation...');

try {
  console.log('Testing DOMSpaceHarvesterAPI import...');
  const { DOMSpaceHarvesterAPI } = await import('./api-server-express.js');
  console.log('‚úÖ DOMSpaceHarvesterAPI imported successfully');

  console.log('Testing DOMSpaceHarvesterAPI instantiation...');
  // Set DB_DISABLED to avoid database connection issues
  process.env.DB_DISABLED = 'true';
  const apiServer = new DOMSpaceHarvesterAPI();
  console.log('‚úÖ DOMSpaceHarvesterAPI instantiated successfully');

} catch (error) {
  console.error('‚ùå DOMSpaceHarvesterAPI error:', error.message);
  console.error('Stack:', error.stack);
}

console.log('API server testing complete');