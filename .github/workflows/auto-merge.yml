name: Auto Merge to Main

on:
  pull_request:
    types: [opened, synchronize, reopened]
    branches: [main]
  workflow_dispatch:
    inputs:
      pr_number:
        description: 'PR number to auto-merge'
        required: true
        type: string

env:
  NODE_VERSION: '18'

jobs:
  # Check if PR is ready for auto-merge
  check-pr-status:
    name: Check PR Status
    runs-on: ubuntu-latest
    outputs:
      ready-to-merge: ${{ steps.check.outputs.ready }}
      pr-number: ${{ steps.check.outputs.pr_number }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Check PR readiness
        id: check
        run: |
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            PR_NUMBER="${{ github.event.inputs.pr_number }}"
          else
            PR_NUMBER="${{ github.event.number }}"
          fi
          
          echo "pr_number=$PR_NUMBER" >> $GITHUB_OUTPUT
          
          # Check if PR is from a feature branch
          BRANCH_NAME=$(gh pr view $PR_NUMBER --json headRefName --jq '.headRefName')
          echo "Branch: $BRANCH_NAME"
          
          if [[ "$BRANCH_NAME" =~ ^(feature|bugfix|hotfix)/ ]]; then
            echo "‚úÖ Branch follows naming convention"
            
            # Check if PR is approved
            APPROVALS=$(gh pr view $PR_NUMBER --json reviews --jq '.reviews[] | select(.state == "APPROVED") | .author.login' | wc -l)
            echo "Approvals: $APPROVALS"
            
            if [ "$APPROVALS" -ge 1 ]; then
              echo "‚úÖ PR has required approvals"
              
              # Check if all CI checks are passing
              CHECKS_STATUS=$(gh pr checks $PR_NUMBER --json conclusion --jq '.[] | select(.conclusion != "success" and .conclusion != "skipped") | .conclusion' | wc -l)
              echo "Failed checks: $CHECKS_STATUS"
              
              if [ "$CHECKS_STATUS" -eq 0 ]; then
                echo "‚úÖ All CI checks are passing"
                echo "ready=true" >> $GITHUB_OUTPUT
              else
                echo "‚ùå Some CI checks are failing"
                echo "ready=false" >> $GITHUB_OUTPUT
              fi
            else
              echo "‚ùå PR needs at least 1 approval"
              echo "ready=false" >> $GITHUB_OUTPUT
            fi
          else
            echo "‚ùå Branch doesn't follow naming convention (feature/*, bugfix/*, hotfix/*)"
            echo "ready=false" >> $GITHUB_OUTPUT
          fi
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  # Auto-merge the PR
  auto-merge:
    name: Auto Merge PR
    runs-on: ubuntu-latest
    needs: check-pr-status
    if: needs.check-pr-status.outputs.ready-to-merge == 'true'
    environment: auto-merge
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run final tests
        run: |
          npm run test:unit:coverage
          npm run test:integration
          npm run build

      - name: Merge PR
        run: |
          PR_NUMBER="${{ needs.check-pr-status.outputs.pr-number }}"
          
          # Get PR details
          PR_TITLE=$(gh pr view $PR_NUMBER --json title --jq '.title')
          PR_AUTHOR=$(gh pr view $PR_NUMBER --json author --jq '.author.login')
          BRANCH_NAME=$(gh pr view $PR_NUMBER --json headRefName --jq '.headRefName')
          
          echo "Merging PR #$PR_NUMBER: $PR_TITLE"
          echo "Author: $PR_AUTHOR"
          echo "Branch: $BRANCH_NAME"
          
          # Merge the PR
          gh pr merge $PR_NUMBER --merge --delete-branch
          
          echo "‚úÖ Successfully merged PR #$PR_NUMBER"
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Notify merge success
        uses: 8398a7/action-slack@v3
        with:
          status: success
          channel: '#lightdom-deployments'
          webhook_url: ${{ secrets.SLACK_WEBHOOK_URL }}
          fields: repo,message,commit,author,action,eventName,ref,workflow
          custom_payload: |
            {
              "text": "üöÄ Auto-merge successful!",
              "attachments": [{
                "color": "good",
                "fields": [
                  {"title": "PR", "value": "#${{ needs.check-pr-status.outputs.pr-number }}", "short": true},
                  {"title": "Branch", "value": "${{ github.head_ref }}", "short": true},
                  {"title": "Author", "value": "${{ github.actor }}", "short": true}
                ]
              }]
            }

  # Cleanup failed merge attempts
  cleanup-failed:
    name: Cleanup Failed Merge
    runs-on: ubuntu-latest
    needs: check-pr-status
    if: needs.check-pr-status.outputs.ready-to-merge == 'false' && github.event_name == 'pull_request'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Comment on PR
        run: |
          PR_NUMBER="${{ needs.check-pr-status.outputs.pr-number }}"
          
          gh pr comment $PR_NUMBER --body "ü§ñ **Auto-merge check failed**
          
          This PR is not ready for automatic merging. Please ensure:
          
          - ‚úÖ Branch follows naming convention (feature/*, bugfix/*, hotfix/*)
          - ‚úÖ PR has at least 1 approval
          - ‚úÖ All CI checks are passing
          - ‚úÖ No merge conflicts
          
          Once these conditions are met, the PR will be automatically merged."
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  # Notify on failure
  notify-failure:
    name: Notify Merge Failure
    runs-on: ubuntu-latest
    needs: [check-pr-status, auto-merge]
    if: failure() && github.event_name == 'pull_request'
    steps:
      - name: Notify Slack
        uses: 8398a7/action-slack@v3
        with:
          status: failure
          channel: '#lightdom-deployments'
          webhook_url: ${{ secrets.SLACK_WEBHOOK_URL }}
          fields: repo,message,commit,author,action,eventName,ref,workflow
          custom_payload: |
            {
              "text": "‚ùå Auto-merge failed!",
              "attachments": [{
                "color": "danger",
                "fields": [
                  {"title": "PR", "value": "#${{ needs.check-pr-status.outputs.pr-number }}", "short": true},
                  {"title": "Branch", "value": "${{ github.head_ref }}", "short": true},
                  {"title": "Author", "value": "${{ github.actor }}", "short": true}
                ]
              }]
            }