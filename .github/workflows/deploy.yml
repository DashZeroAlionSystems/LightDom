name: Deploy (build & push / optional SSH deploy)

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Deployment environment'
        required: true
        default: 'dev'
        type: choice
        options: [ dev, staging, production ]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    environment: ${{ github.event.inputs.environment }}
    env:
      DOCKER_PUSH: ${{ secrets.DOCKER_PUSH }}
      CR_PAT: ${{ secrets.CR_PAT }}
      SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
      DEPLOY_HOST: ${{ secrets.DEPLOY_HOST }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install dependencies
        run: npm ci

      - name: Run type-check and tests
        run: |
          npm run type-check
          npm run test:unit || true

      - name: Build frontend
        run: npm run build --if-present

      - name: Login to GitHub Container Registry
        if: ${{ env.DOCKER_PUSH == 'true' }}
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ env.CR_PAT }}

      - name: Build and optionally push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: ${{ env.DOCKER_PUSH == 'true' }}
          tags: ghcr.io/${{ github.repository_owner }}/lightdom:${{ github.sha }}

      - name: Optional SSH deploy (placeholder)
        if: ${{ env.SSH_PRIVATE_KEY != '' && env.DEPLOY_HOST != '' }}
        run: |
          echo "Deploying to $DEPLOY_HOST"
          mkdir -p ~/.ssh
          echo "${{ env.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh -o StrictHostKeyChecking=no ${{ env.DEPLOY_HOST }} 'docker pull ghcr.io/${{ github.repository_owner }}/lightdom:${{ github.sha }} && docker compose -f /opt/lightdom/docker-compose.yml up -d --no-build'

      - name: Deployment complete
        run: echo "Deployment job completed for ${{ github.event.inputs.environment }}"
