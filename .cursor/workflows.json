{
  "workflows": [
    {
      "name": "PreCommitWorkflow",
      "description": "Workflow that runs before every commit",
      "triggers": ["pre-commit"],
      "tasks": [
        "runCodeFormatting",
        "runLinting",
        "runTypeChecking",
        "runUnitTests",
        "checkSecrets"
      ],
      "parallel": true,
      "failFast": true,
      "timeout": 600000
    },
    {
      "name": "PullRequestWorkflow",
      "description": "Workflow that runs on pull request creation/update",
      "triggers": ["pull-request"],
      "tasks": [
        "runCodeFormatting",
        "runLinting",
        "runTypeChecking",
        "runSecurityScanning",
        "runUnitTests",
        "runIntegrationTests",
        "checkTestCoverage",
        "analyzeCodeQuality",
        "checkSecurityIssues",
        "validateArchitecture"
      ],
      "parallel": false,
      "failFast": false,
      "timeout": 1800000
    },
    {
      "name": "FeatureDevelopmentWorkflow",
      "description": "Complete workflow for feature development",
      "triggers": ["feature-branch"],
      "phases": [
        {
          "name": "Planning",
          "tasks": [
            "validateArchitecture",
            "checkCompliance"
          ]
        },
        {
          "name": "Development",
          "tasks": [
            "runCodeFormatting",
            "runLinting",
            "runTypeChecking",
            "runUnitTests"
          ],
          "continuous": true
        },
        {
          "name": "Testing",
          "tasks": [
            "runIntegrationTests",
            "runE2ETests",
            "runPerformanceTests",
            "checkTestCoverage"
          ]
        },
        {
          "name": "Review",
          "tasks": [
            "analyzeCodeQuality",
            "checkSecurityIssues",
            "suggestImprovements"
          ]
        }
      ],
      "timeout": 3600000
    },
    {
      "name": "SecurityWorkflow",
      "description": "Comprehensive security scanning workflow",
      "triggers": ["security-scan", "schedule"],
      "tasks": [
        "scanDependencies",
        "checkSecrets",
        "runSAST",
        "runDAST",
        "checkCompliance"
      ],
      "parallel": true,
      "failFast": false,
      "timeout": 1800000
    },
    {
      "name": "DeploymentWorkflow",
      "description": "Complete deployment workflow with quality gates",
      "triggers": ["deploy"],
      "phases": [
        {
          "name": "PreDeployment",
          "tasks": [
            "buildApplication",
            "runQualityGates",
            "runSecurityScanning",
            "runPerformanceTests"
          ]
        },
        {
          "name": "StagingDeployment",
          "tasks": [
            "deployToStaging",
            "runSmokeTests",
            "runE2ETests"
          ]
        },
        {
          "name": "ProductionDeployment",
          "tasks": [
            "deployToProduction",
            "monitorDeployment"
          ]
        }
      ],
      "timeout": 3600000
    },
    {
      "name": "DocumentationWorkflow",
      "description": "Automated documentation generation and validation",
      "triggers": ["docs-update", "schedule"],
      "tasks": [
        "generateAPIDocs",
        "updateREADME",
        "generateChangelog",
        "updateArchitectureDocs",
        "validateDocumentation"
      ],
      "parallel": true,
      "failFast": false,
      "timeout": 900000
    },
    {
      "name": "PerformanceWorkflow",
      "description": "Performance monitoring and optimization workflow",
      "triggers": ["performance-check", "schedule"],
      "tasks": [
        "runPerformanceTests",
        "analyzeBundleSize",
        "checkCoreWebVitals",
        "optimizeImages",
        "analyzeMemoryUsage"
      ],
      "parallel": true,
      "failFast": false,
      "timeout": 1800000
    },
    {
      "name": "MonitoringWorkflow",
      "description": "Continuous monitoring and alerting workflow",
      "triggers": ["continuous"],
      "tasks": [
        "monitorHealthChecks",
        "trackErrorRates",
        "monitorPerformance",
        "checkResourceUsage",
        "alertOnIssues"
      ],
      "parallel": true,
      "failFast": false,
      "interval": 300000
    },
    {
      "name": "HotfixWorkflow",
      "description": "Emergency hotfix deployment workflow",
      "triggers": ["hotfix"],
      "tasks": [
        "runCodeFormatting",
        "runLinting",
        "runTypeChecking",
        "runUnitTests",
        "runSecurityScanning",
        "buildApplication",
        "deployToStaging",
        "runSmokeTests",
        "deployToProduction",
        "monitorDeployment"
      ],
      "parallel": false,
      "failFast": true,
      "timeout": 1800000
    },
    {
      "name": "ReleaseWorkflow",
      "description": "Complete release workflow with all quality gates",
      "triggers": ["release"],
      "phases": [
        {
          "name": "Preparation",
          "tasks": [
            "generateChangelog",
            "updateREADME",
            "runQualityGates"
          ]
        },
        {
          "name": "Testing",
          "tasks": [
            "runUnitTests",
            "runIntegrationTests",
            "runE2ETests",
            "runPerformanceTests",
            "runSecurityScanning"
          ]
        },
        {
          "name": "Deployment",
          "tasks": [
            "buildApplication",
            "deployToStaging",
            "runSmokeTests",
            "deployToProduction",
            "monitorDeployment"
          ]
        },
        {
          "name": "PostRelease",
          "tasks": [
            "generateAPIDocs",
            "updateArchitectureDocs",
            "monitorHealthChecks"
          ]
        }
      ],
      "timeout": 7200000
    }
  ],
  "globalConfig": {
    "maxConcurrentWorkflows": 3,
    "defaultTimeout": 1800000,
    "retryPolicy": {
      "maxRetries": 3,
      "backoffMultiplier": 2,
      "maxBackoff": 300000
    },
    "notifications": {
      "onSuccess": true,
      "onFailure": true,
      "onTimeout": true,
      "channels": ["slack", "email"]
    }
  }
}
